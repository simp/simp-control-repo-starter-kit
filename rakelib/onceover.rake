# frozen_string_literal: true

# These tasks help revionics use onceover to validate their manifests and data
#
# To prep and run onceover spec tests, run:
#
#   bundler exec rake spec
#
namespace :onceover do
  desc "Prepare a spec/hiera.yaml that doesn't use eyaml backends"
  task :spec_prep_hiera do
    require 'yaml'
    data = YAML.load_file('hiera.yaml')
    data['defaults']['datadir'] = File.join('..', data['defaults']['datadir'])
    data['hierarchy'].select { |x| (x['lookup_key'] || '') == 'eyaml_lookup_key' }.each do |x|
      x.delete('lookup_key')
      x.delete('options')
      mocked_paths = x['paths'].map { |i| File.join('../spec/data/mocked_eyaml', i) }
      x['paths'] = mocked_paths + x['paths']
    end

    data['hierarchy'].unshift({
       'name'=> 'Test-only data (overrides ALL other hiera)',
       'paths' => ['../spec/data/test-only_data.yaml'],
    })

    data['hierarchy'].unshift({
       'name'=> 'Mocked EYAML lookups (overrides ALL other hiera)',
       'paths' => ['../spec/data/mocked_eyaml/override_everything.yaml'],
    })

    File.open('spec/hiera.yaml', 'w') do |f|
      f.puts('# Generated by rake task onceover:spec_prep_hiera')
      f.puts(data.to_yaml)
    end
  end

  task spec_prep: %i[spec_prep_hiera]

  desc 'Run onceover spec tests and display Puppet errors'
  task spec: %i[spec_prep_hiera] do |_t, args|
    ENV['SHOW_PUPPET_OUTPUT'] = 'true'
     # Allows Puppetfile to include puppetlabs/*_core modules, which are not included by pdk/Puppet 7
    ENV['ONCEOVER'] = 'yes'
    ENV['MODULEPATH'] = ''
    sh "onceover run spec #{args.to_a.join(',')}"
  end

  desc 'Run onceover spec tests and display Puppet errors (skip r10k)'
  task spec_standalone: %i[spec_prep_hiera] do |_t, args|
    ENV['SHOW_PUPPET_OUTPUT'] = 'true'
    ENV['ONCEOVER'] = 'yes'
    ENV['MODULEPATH'] = ''
    sh "onceover run spec -s #{args.to_a.join(',')}"
  end
end
